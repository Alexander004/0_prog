plot(model) # a sequence of four diagnostic plots
library(tidyverse)                       # load tidyverse library
getwd()                                  # check the working directory
region <- read.csv2("~/0_HSE_study/нис/5/regional_data.csv") # Load the data
glimpse(region)                          # check the data
# Build a model explaining Turnout in 2011 by the following set of predictors:
# democracy_index  = Petrov-Titkov regional democratization index, 2013
# urbanpopulation = share of urban populaiton in the region, % of regional population, 2011
# internet = internet penetration, % of regional population, 2011
# reg_grp = regional GRP, thousands rub., 2011
# protest_events = aggregated count of protest events in the region, 2097-2012
# ethnic = region's ethnic status
model <- lm(turnout_2011 ~ democracy_index + urbanpopulation + internet + reg_grp + protest_events + ethnic, data = region)
# For which variables we reject the null hypothesis of no relations (beta = 0) with the outcome?
# Check the summary of the model, interpret the coefficients.
summary(model)
##############
### ANSWER ###
##############
#
# We can reject H0 for: democracy_index, internet, reg_grp and ethnic variables.
#
# Interpretation of coefficients:
# increase in democracy index in the region by 1 percent is associated with an average decrease in turnout by 0.8702 percent all things being equal
# increase in internet penetration in the region by 1 percent is associated with an average decrease in turnout by 0.2489 percent all things being equal
# increase in regional GRP in the region by 1 percent is associated with an average increase in turnout by 3.214e-06 percent all things being equal
# being an ethnic region is associated with an average increase in turnout by 9.175 percent all things being equal
# Check the linearity condition. Which variables should be transformed?
# Check the linearity condition. Which variables should be transformed?
region_pairs <- region[ , c("reg_ur2011", "democracy_index", "urbanpopulation", "internet", "reg_grp", "protest_events")]
pairs(region_pairs, pch = 19, lower.panel = NULL)
##############
### ANSWER ###
##############
# You can access residuals from the model fitted values via $.
summary(model$residuals)
# Check the histogram of the residuals, does it look normal?
hist(model$residuals)
##############
### ANSWER ###
##############
#
# It kind of does, however with a visible diproportion at the right side (tails are not even)
# One way to assess if residuals are i.i.d. is to plot residuals vs. fitted. Use base R to plot it.
plot(model$fitted.values, model$residuals, xlab = "Fitted Values", ylab = "Residuals")
# Can you see any pattern in the plot? Write down the answer.
##############
### ANSWER ###
##############
#
# The pattern is clearly seen - a line from left-up to right-bottom corners, therefore we can say that residuals show that the data is disbalanced
# You can run four diagnostic plots simply putting your model in plot() function:
plot(model) # a sequence of four diagnostic plots
model_log <- lm(turnout_2011 ~ democracy_index + urbanpopulation + internet + log(reg_grp+1) + protest_events + ethnic, data = region)
bptest(model_log)
library(lmtest)
bptest(model_log)
bptest(model)
bptest(model_log)
plot(model_log)
library(sandwich)
coeftest(model_log, vcov = vcovHC(model_log, type = "HC3"))
region %>% filter(turnout_2011 >= 80) %>% select(Region)
region_clean <- region %>% filter(turnout_2011 < 80)
glimpse(region_clean)
# Standardize the variables (log-transform GRP and protests).
region$democracy_centered <- as.vector(scale(region$democracy_index))
region$urbanpopulation_centered <- as.vector(scale(region$urbanpopulation))
region$internet_centered <- as.vector(scale(region$internet))
region$log_grp_centered <- as.vector(scale(log(region$reg_grp)))
region$log_protest_centered <- as.vector(scale(log(region$protest_events+1)))
model_centered <- lm(turnout_2011 ~ democracy_centered + urbanpopulation_centered + internet_centered + log_grp_centered + log_protest_centered + ethnic, data = region)
summary(model_centered)
tab_model(model_centered, vcov.fun = "HC3", show.se = TRUE)
library(sjPlot)
tab_model(model_centered, vcov.fun = "HC3", show.se = TRUE)
region_pairs <- region[ , c("reg_ur2011", "democracy_index", "urbanpopulation", "internet", "reg_grp", "protest_events")]
pairs(region_pairs, pch = 19, lower.panel = NULL)
model_log <- lm(turnout_2011 ~ democracy_index + urbanpopulation + internet + log(reg_grp+1) + log(protest_events + 1 ) + ethnic, data = region)
bptest(model_log)
plot(model_log)
plot(model_log)
plot(model_log)
plot(model_log)
plot(model_log)
coeftest(model_log, vcov = vcovHC(model_log, type = "HC3"))
knitr::opts_chunk$set(echo = TRUE)
library(HistData)
