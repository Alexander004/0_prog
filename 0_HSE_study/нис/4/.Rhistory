Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'regions'),
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
#colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'regions'),
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
#colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'regions'),
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
#colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'respondents'),
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
#colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
#insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'respondents'),
#marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
#colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
#insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'respondents'),
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
#colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'respondents'),
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'respondents'),
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'respondents'),
marker = list(colors = "oranges", line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
#colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'respondents'),
marker = list(colors = "oranges", line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
#colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'respondents'),
marker = list(colors = "Oranges", line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
#colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'respondents'),
marker = list(colors = "Reds", line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
#colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'respondents'),
marker = list(colors = "Red", line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
colors <- c('Red', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'respondents'),
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
colors <- c('#A20925', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'respondents'),
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
colors <- c('#94110F', '#E0312D', '#FF4F4D', '#2DE065', '#00942F')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'respondents'),
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
colors <- c('#94110F', '#E0312D', '#D5DECB', '#2DE065', '#00942F')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'respondents'),
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig
sat_data = sat_data %>% mutate(
sat_name = (case_when(
Satisfaction == 1 ~ "Complete dissatisfaction",
Satisfaction == 2 ~ "Mostly dissatisfaction",
Satisfaction == 3 ~ "Medium satisfaction",
Satisfaction == 4 ~ "Mostly satisfaction",
Satisfaction == 5 ~ "Complete satisfaction"
)))
colors <- c('#94110F', '#E0312D', '#CADECE', '#2DE065', '#00942F')
fig <- plot_ly(sat_data, labels = ~sat_name, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(values, 'respondents'),
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig
data2012_mneniye_clean = data2012_mneniye_clean %>% mutate(
gender_names = case_when(
Gender == 1 ~ "Male",
Gender == 2 ~ "Female"
))
age_sat <- plot_ly(data = data2012_mneniye_clean, x = ~Age, y= ~Satisfaction, color = ~gender_names, colors = "#94110F",  type = "scatter") %>%
layout(title = "Age/Satisfaction Relationship", xaxis = list(title = 'Age'), yaxis = list(title = 'Satisfaction'),
legend = list(title=list(text='Gender')))
age_sat
data2012_mneniye_clean = data2012_mneniye_clean %>% mutate(
gender_names = case_when(
Gender == 1 ~ "Male",
Gender == 2 ~ "Female"
))
age_sat <- plot_ly(data = data2012_mneniye_clean, x = ~Age, y= ~Satisfaction, color = ~gender_names, colors = c("#94110F","#2921DB"),  type = "scatter") %>%
layout(title = "Age/Satisfaction Relationship", xaxis = list(title = 'Age'), yaxis = list(title = 'Satisfaction'),
legend = list(title=list(text='Gender')))
age_sat
data2012_mneniye_clean = data2012_mneniye_clean %>% mutate(
gender_names = case_when(
Gender == 1 ~ "Male",
Gender == 2 ~ "Female"
))
age_sat <- plot_ly(data = data2012_mneniye_clean, x = ~Age, y= ~Satisfaction, color = ~gender_names, colors = c("#E04553","#2921DB"),  type = "scatter") %>%
layout(title = "Age/Satisfaction Relationship", xaxis = list(title = 'Age'), yaxis = list(title = 'Satisfaction'),
legend = list(title=list(text='Gender')))
age_sat
data2012_mneniye_clean = data2012_mneniye_clean %>% mutate(
education_name = (case_when(
Education == 4 ~ "Higher education",
Education == 3 ~ "Not finished higher ed.",
Education == 2 ~ "School education"
)))
ed_sat <- plot_ly(data=data2012_mneniye_clean, x = ~education_name, y = ~Satisfaction, type = "box", color = ~education_name) %>%
layout(title = "Education/Satisfaction Relationship", xaxis = list(title = " "), yaxis = list(title = "Satisfaction"))
ed_sat
data2012_mneniye_clean = data2012_mneniye_clean %>% mutate(
education_name = (case_when(
Education == 4 ~ "Higher education",
Education == 3 ~ "Not finished higher ed.",
Education == 2 ~ "School education"
)))
ed_sat <- plot_ly(data=data2012_mneniye_clean, x = ~education_name, y = ~Satisfaction, type = "box", color = ~education_name, colors = c("Green","Red","Blue")) %>%
layout(title = "Education/Satisfaction Relationship", xaxis = list(title = " "), yaxis = list(title = "Satisfaction"))
ed_sat
data2012_mneniye_clean = data2012_mneniye_clean %>% mutate(
education_name = (case_when(
Education == 4 ~ "Higher education",
Education == 3 ~ "Not finished higher ed.",
Education == 2 ~ "School education"
)))
ed_sat <- plot_ly(data=data2012_mneniye_clean, x = ~education_name, y = ~Satisfaction, type = "box", color = ~education_name, colors = c("Green","Blue","Red")) %>%
layout(title = "Education/Satisfaction Relationship", xaxis = list(title = " "), yaxis = list(title = "Satisfaction"))
ed_sat
data2012_mneniye_clean = data2012_mneniye_clean %>% mutate(
education_name = (case_when(
Education == 4 ~ "Higher education",
Education == 3 ~ "Not finished higher ed.",
Education == 2 ~ "School education"
)))
ed_sat <- plot_ly(data=data2012_mneniye_clean, x = ~education_name, y = ~Satisfaction, type = "box", color = ~education_name, colors = c("#00942F","#2921DB","#E04553")) %>%
layout(title = "Education/Satisfaction Relationship", xaxis = list(title = " "), yaxis = list(title = "Satisfaction"))
ed_sat
ggplot(region, aes(x = democracy_index, y = reg_ur2011 )) +
geom_point() +
geom_smooth(method = "lm", se=F) +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
binom.test(18, 20, p=0.5, alternative="two.sided")#example with a coin
binom.test(300, 1000, p=0.65, alternative="two.sided")#example with prime-minister
CFD<-c(0.79712, 0.81603, 0.73654, 0.78885, 0.71376, 0.7616, 0.6871, 0.8101, 0.8084, 0.7449, 0.7677, 0.7634, 0.7349, 0.8181, 0.7455, 0.7920, 0.7184, 0.7088)
VFD<-c(0.7769, 0.7399, 0.8535, 0.8209, 0.7623, 0.7729, 0.7535, 0.7041, 0.7726, 0.7297, 0.7998, 0.7582, 0.7833, 0.7427)
set.seed(123)
CFD_sample <- sample(CFD, size = length(VFD))
set.seed(123)
CFD_sample <- sample(CFD, size = length(VFD))
CFD_sample
# Normality test
shapiro.test(CFD_sample)
shapiro.test(VFD)
# Variance homogeneity test
bartlett.test(list(CFD_sample, VFD))
# Parametric two-sample t-test
t.test(CFD_sample, VFD, var.equal = TRUE)
# Nonparametric two-sample Mann-Whitney test
wilcox.test(CFD_sample, VFD)
# One-sided t-test for the hypothesis that Putin's performance in VFD is better than in CFD
t.test(CFD_sample, VFD, alternative = "less", var.equal = TRUE)
# One-sided Mann-Whitney test for the hypothesis that Putin's performance in VFD is better than in CFD
wilcox.test(CFD_sample, VFD, alternative = "less")
# One-sided t-test for the hypothesis that Putin's performance in VFD is worse than in CFD
t.test(CFD_sample, VFD, alternative = "greater", var.equal = TRUE)
# One-sided Mann-Whitney test for the hypothesis that Putin's performance in VFD is worse than in CFD
wilcox.test(CFD_sample, VFD, alternative = "greater")
group1<-c(5,6,8,5,4,10,8,4,4,8,7,5,6,8,5,6,4,8,7,6,6,9,9,6,10,1)
group2<-c(5,10,9,5,7,8,10,2,5,6,7,6,9,6,6,6,9,4,9,9,4,7,5,5,10)
group3<-c(6,5,3,10,4,9,6,2,10,5,8,4,5,8,6,2,7,4,9,4,7,9,7,4,9,8,10)
group4 <-c(7,3,5,7,5,1,2,5,3,7,3,5,6,4,7,2,6,3,8,2,5,8,7,9,7,7,4)
library(ggplot2)
library(ggthemes)
ggplot() + geom_boxplot(aes(x='Group 1', y=group1), fill="hotpink2") +
labs (title = "Distribution of second-year student grades for QM test", x="Group", y="Students' grades for the test (by groups)") +
geom_boxplot(aes(x='Group 2', y=group2), fill="green4")  +
geom_boxplot(aes(x='Group 3', y=group3), fill="lightseagreen") +
geom_boxplot(aes(x='Group 4', y=group4), fill="sandybrown") +
theme_bw()
group3_grade25<-sample(group3,25)
group3_grade25
shapiro.test(group2) # p-value = 0.1177, therefore, we cannot reject H0 that the distribution is different from normal
#orientation on the threshold p<0.05
shapiro.test(group3_grade25) # p-value = 0.1072 (random)
var.test(group2,group3_grade25) # p-value = 0.5571 (random)
t.test(group2,group3_grade25, paired=F, var.equal=T, alternative = "two.sided")
Governor_efficiency_2021<-c(
3.340058, 3.487352, 3.262390, 2.703485, 2.769829, 2.602641, 2.799938, 2.641882, 1.860896, 3.259277,
3.197240, 3.111650, 2.931420, 3.395107, 1.228543, 3.419730, 1.340341, 3.711110, 3.579312, 2.522482,
1.924205, 3.239865, 1.605958, 2.497909, 3.263193, 2.028917, 3.449813, 2.998685, 3.051794, 2.410641,
3.060089, 1.188560, 2.360630, 1.587523, 2.380161, 1.709104, 2.494457, 2.977297, 1.504619, 1.970722,
3.399876, 2.342005, 1.202196, 2.558001, 1.914378, 1.936592, 1.128370, 2.133732, 1.039167, 1.574649,
1.304509, 1.890191, 1.250982, 1.474859, 3.811923, 2.770824, 2.826713, 2.248259, 2.804652, 3.539646,
1.719193, 2.156506, 3.043441, 2.505993, 2.756654, 2.533240, 3.623129, 1.929698, 2.128946, 2.324179,
2.064881, 1.745690, 2.860402, 3.607704, 3.513323, 3.113642, 3.653694, 3.089872, 3.540408, 2.461700,
2.943309, 2.822206, 3.283496)
Governor_efficiency_2019<-c(
3.178758034,2.718889302,3.786684004,1.82242603,2.237343566,2.294624116,3.207722083,3.370272614,
3.585614471,2.293477289,2.570990734,3.501947555,2.398346861,3.015258612,3.431085176,1.222264147,
3.327915559,3.004240427,2.65103376,1.113199345,1.687450029,3.424555897,3.814163674,1.99195193,
3.282089193,2.659332236,2.587317582,3.645180294,2.96625683,2.950277784,3.670288849,3.757557161,
3.351080756,2.618243669,3.416189807,3.543019897,3.009717046,3.383367854,3.007089157,1.979944353,
3.3416511,3.573919555,3.306050884,2.298692173,1.795006713,2.125961513,1.482448006,2.345780759,
1.092520788,1.096619199,1.600942684,3.767911924,1.896522303,2.192980318,1.091004158,2.342911051,
1.525804835,1.314881044,1.178053589,2.99610948,3.022403385,3.059402812,1.660548902,2.861867029,
3.693029121,3.300848213,2.36120007,1.591261913,3.138720811,3.25995686,1.803533333,1.763346543,
2.663423421,2.71562968,3.178486711,2.921795952,2.306784069,1.004542087,2.730690335,2.679940677,
1.472318199,1.45916493,4.115141029)
ggplot() + geom_boxplot(aes(x='Efficiency 2019', y=Governor_efficiency_2019), fill="tomato1") +
labs (title = "Efficiency index of Russian governors in 2019 and 2021", x="Aggregated efficiency rating", y="") +
geom_boxplot(aes(x='Efficiency 2021', y=Governor_efficiency_2021), fill="purple4") +
theme_bw()
shapiro.test(Governor_efficiency_2019-Governor_efficiency_2021)
var.test(Governor_efficiency_2019,Governor_efficiency_2021)
t.test(Governor_efficiency_2019,Governor_efficiency_2021, paired=T, var.equal=T, alternative="two.sided")
Europe<-c(1.0,2.0,1.5,2.5,1.0,1.0,1.5,2.0,2.5,3.0,1.5,1.0,4.0,1.5)
Asia<-c(2.0,3.0,4.5,4.5,4.0,3.0,2.5,3.0,1.5,1.0,4.5,5.0,2.0,3.5)
shapiro.test(Europe)
shapiro.test(Asia)
var.test(Europe, Asia)
wilcox.test(Europe,Asia,alternative = "two.sided")
wilcox.test(Europe,Asia,alternative = "less")
wilcox.test(Europe,Asia,alternative = "greater")
CFD<-c(0.79712, 0.81603, 0.73654, 0.78885, 0.71376, 0.7616, 0.6871, 0.8101, 0.8084, 0.7449, 0.7677, 0.7634, 0.7349, 0.8181, 0.7455, 0.7920, 0.7184, 0.7088)
VFD<-c(0.7769, 0.7399, 0.8535, 0.8209, 0.7623, 0.7729, 0.7535, 0.7041, 0.7726, 0.7297, 0.7998, 0.7582, 0.7833, 0.7427)
set.seed(123)
CFD_sample <- sample(CFD, size = length(VFD))
CFD_sample
CFD_sample <- sample(CFD, size = length(VFD))
CFD_sample
# Normality test
shapiro.test(CFD_sample)
shapiro.test(VFD)
# Variance homogeneity test
bartlett.test(list(CFD_sample, VFD))
# Parametric two-sample t-test
t.test(CFD_sample, VFD, var.equal = TRUE)
# Nonparametric two-sample Mann-Whitney test
wilcox.test(CFD_sample, VFD)
# One-sided t-test for the hypothesis that Putin's performance in VFD is better than in CFD
t.test(CFD_sample, VFD, alternative = "less", var.equal = TRUE)
# One-sided Mann-Whitney test for the hypothesis that Putin's performance in VFD is better than in CFD
wilcox.test(CFD_sample, VFD, alternative = "less")
# One-sided t-test for the hypothesis that Putin's performance in VFD is worse than in CFD
t.test(CFD_sample, VFD, alternative = "greater", var.equal = TRUE)
# One-sided Mann-Whitney test for the hypothesis that Putin's performance in VFD is worse than in CFD
wilcox.test(CFD_sample, VFD, alternative = "greater")
# Normality test
shapiro.test(CFD_sample)
shapiro.test(VFD)
# Variance homogeneity test
var.test(CFD_sample, VFD)
# Parametric two-sample t-test
t.test(CFD_sample, VFD, var.equal = TRUE)
# One-sided t-test for the hypothesis that Putin's performance in VFD is better than in CFD
t.test(CFD_sample, VFD, alternative = "less", var.equal = TRUE)
# One-sided t-test for the hypothesis that Putin's performance in VFD is worse than in CFD
t.test(CFD_sample, VFD, alternative = "greater", var.equal = TRUE)
