wdidata$Country<-str_replace(wdidata$Country,"Lao PDR","Laos")
wdidata$Country<-str_replace(wdidata$Country,"Micronesia, Fed. Sts.","Micronesia")
# Merging
step_one <- merge(UN_nations, wgidata, by = "Country")
#step_one #169 - has to be 193 -> after fixing names 191
step_one$Country<-str_replace(step_one$Country,"Democratic Republic of the Congo","Congo (Kinshasa)")
step_one$Country<-str_replace(step_one$Country,"Republic of Congo","Congo (Brazzaville)")
step_two <- merge(step_one, aaa, by = "Country")
#step_two #175 - has to be 191 -> after fixing done
step_three <- merge(step_two, wdidata, by = "Country")
step_three #170 - has to be 191 -> after fixing 188 left
for (i in step_two$Country) {
if (!(i %in% wdidata$Country)) {
print(i)
}
}
# Visualisations - Histogram
library(ggplot2)
library(cowplot)
ps_vis <- ggplot(step_three, aes(Political_Stability)) +
geom_histogram(aes(y = stat(density)), fill = '#ffadbc') +
geom_density(col = "black") +
theme_bw() +
xlab("Political Stability Index") +
ylab("Density") +
ggtitle("Distribution of Political Stability Index")
rl_vis <- ggplot(step_three, aes(Rule_of_Law)) +
geom_histogram(aes(y = stat(density)), fill = '#ffadbc') +
geom_density(col = "black") +
theme_bw() +
xlab("Rule of Law Index") +
ylab("Density") +
ggtitle("Distribution of Rule of Law Index")
plot_grid(
ps_vis, rl_vis,
align="hv"
)
# Changing Regions
step_three$Region<-str_replace(step_three$Region,"Middle East","Asia")
step_three$Region<-str_replace(step_three$Region,"Eurasia","Asia")
step_three$Region<-str_replace(step_three$Region,"Americas","North America")
step_three$Region[step_three$Country == "Australia"] <- "Oceania"
step_three$Region[step_three$Country == "Papua New Guinea"] <- "Oceania"
step_three$Region[step_three$Country == "New Zealand"] <- "Oceania"
step_three$Region[step_three$Country == "Fiji"] <- "Oceania"
step_three$Region[step_three$Country == "Solomon Islands"] <- "Oceania"
step_three$Region[step_three$Country == "Micronesia"] <- "Oceania"
step_three$Region[step_three$Country == "Vanuatu"] <- "Oceania"
step_three$Region[step_three$Country == "Samoa"] <- "Oceania"
step_three$Region[step_three$Country == "Kiribati"] <- "Oceania"
step_three$Region[step_three$Country == "Tonga"] <- "Oceania"
step_three$Region[step_three$Country == "Marshall Islands"] <- "Oceania"
step_three$Region[step_three$Country == "Palau"] <- "Oceania"
step_three$Region[step_three$Country == "Tuvalu"] <- "Oceania"
step_three$Region[step_three$Country == "Nauru"] <- "Oceania"
step_three$Region[step_three$Country == "Brazil"] <- "South America"
step_three$Region[step_three$Country == "Colombia"] <- "South America"
step_three$Region[step_three$Country == "Argentina"] <- "South America"
step_three$Region[step_three$Country == "Peru"] <- "South America"
step_three$Region[step_three$Country == "Venezuela"] <- "South America"
step_three$Region[step_three$Country == "Chile"] <- "South America"
step_three$Region[step_three$Country == "Ecuador"] <- "South America"
step_three$Region[step_three$Country == "Bolivia"] <- "South America"
step_three$Region[step_three$Country == "Paraguay"] <- "South America"
step_three$Region[step_three$Country == "Uruguay"] <- "South America"
step_three$Region[step_three$Country == "Guyana"] <- "South America"
step_three$Region[step_three$Country == "Suriname"] <- "South America"
# Visualisations - Boxplots
p<-ggplot(step_three, aes(x=Region, y=PR, color=Region)) +
xlab("Regions") +
ylab("Political Rights Index") +
ggtitle("Political Rights Index in the World") +
geom_boxplot()
p
# Visualisations - Scatterplots
Europe <- step_three[step_three$Region == "Europe",]
europe_plot <- ggplot(Europe, aes(x = GDP_per_capita, y = Government_Effectiveness)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(title = paste("Europe"),
x = "GDP per capita",
y = "Governance Effectiveness") +
theme_bw()
Asia <- step_three[step_three$Region == "Asia",]
asia_plot <- ggplot(Asia, aes(x = GDP_per_capita, y = Government_Effectiveness)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(title = paste("Asia"),
x = "GDP per capita",
y = "Governance Effectiveness") +
theme_bw()
Oceania <- step_three[step_three$Region == "Oceania",]
oceania_plot <- ggplot(Oceania, aes(x = GDP_per_capita, y = Government_Effectiveness)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(title = paste("Oceania"),
x = "GDP per capita",
y = "Governance Effectiveness") +
theme_bw()
Africa <- step_three[step_three$Region == "Africa",]
africa_plot <- ggplot(Africa, aes(x = GDP_per_capita, y = Government_Effectiveness)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(title = paste("Africa"),
x = "GDP per capita",
y = "Governance Effectiveness") +
theme_bw()
North_A <- step_three[step_three$Region == "North America",]
north_plot <- ggplot(North_A, aes(x = GDP_per_capita, y = Government_Effectiveness)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(title = paste("North America"),
x = "GDP per capita",
y = "Governance Effectiveness") +
theme_bw()
South_A <- step_three[step_three$Region == "South America",]
south_plot <- ggplot(South_A, aes(x = GDP_per_capita, y = Government_Effectiveness)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(title = paste("South America"),
x = "GDP per capita",
y = "Governance Effectiveness") +
theme_bw()
plot_grid(
europe_plot, asia_plot,africa_plot,oceania_plot,north_plot,south_plot,
align="hv"
)
# Modeling
model1 <- lm(Government_Effectiveness ~ Political_Stability + Rule_of_Law + PR + CL +GDP_per_capita + Population_growth, data = step_three)
model2 <- lm(Government_Effectiveness ~ Political_Stability + Rule_of_Law + PR +GDP_per_capita + Population_growth, data = step_three)
model3 <- lm(Government_Effectiveness ~ Political_Stability + Rule_of_Law + GDP_per_capita + Population_growth, data = step_three)
model4 <- lm(Government_Effectiveness ~ Political_Stability*GDP_per_capita, data = step_three)
library(performance)
compare_performance(model1, model2, model3, model4)
# 1st and 2nd model have same explanatory power however 2nd model has slightly bigger predictory power so it is better
summary(model1)
# Stargazer
library(stargazer)
d<- data.frame(step_three$Government_Effectiveness,step_three$Political_Stability,step_three$Rule_of_Law,step_three$PR,step_three$CL,step_three$GDP_per_capita,step_three$Population_growth)
stargazer(d, type="html",
title="Table 1",
digits=3,
summary.stat=c("sd", "min", "max","median"),
out="stat1.html",
covariate.labels=c("Government Effectiveness", "Political Stability","Rule of Law","Political Rights","Civil Liberties", "GDP per capita", "Population growth"))
stargazer(model1, model2, model3,model4,
type="html",
model.numbers = FALSE,
title="Table 2",
dep.var.labels=c("Government Effectiveness"),
covariate.labels=c("Political Stability","Rule of Law","Political Rights","Civil Liberties", "GDP per capita", "Population growth"),
out="stat2.html")
# Tests
library(car)
vif(model1) # Pr and CL above 10 - problem -> get rid of CL and work with model 2 instead
ncvTest(model2) # p-value > 0.05 -> no problem
outlierTest(model2) # 106 (Marshall Islands) and 176 (Tuvalu) are outliers
plot(model2, which = 4, cook.levels = 1)
abline(h=1, lty=2, col="red") # No one crosses the line
summary(powerTransform(step_three$Government_Effectiveness^2)) # p-value for lambda 1 is smaller than 0.05 -> we have a problem
# Trying to solve issue of positive values
ng <- step_three$Government_Effectiveness^2+1
psss <- step_three$Political_Stability^2+1
rll <- step_three$Rule_of_Law^2+1
pr2 <- step_three$PR^2+1
money <- step_three$Population_growth^2+1
boxTidwell(ng ~ psss+rll+pr2) # p-value > 0.05 so no problem
# Visualisations for tests
spreadLevelPlot(model1)
qqPlot(model2, main="Q-Q Plot for Model 2")
crPlots(model2)
# Visualisations for tests
spreadLevelPlot(model2)
qqPlot(model2, main="Q-Q Plot for Model 2")
crPlots(model2)
# Modeling
model1 <- lm(Government_Effectiveness ~ Political_Stability + Rule_of_Law + PR + CL +GDP_per_capita + Population_growth, data = step_three)
model2 <- lm(Government_Effectiveness ~ Political_Stability + Rule_of_Law + PR +GDP_per_capita + Population_growth, data = step_three)
model3 <- lm(Government_Effectiveness ~ Political_Stability + Rule_of_Law + GDP_per_capita + Population_growth, data = step_three)
model4 <- lm(Government_Effectiveness ~ Political_Stability*GDP_per_capita, data = step_three)
library(performance)
compare_performance(model1, model2, model3, model4)
# Modeling
model1 <- lm(Government_Effectiveness ~ Political_Stability + Rule_of_Law + PR + CL +GDP_per_capita + Population_growth, data = step_three)
model2 <- lm(Government_Effectiveness ~ Political_Stability + Rule_of_Law + PR +GDP_per_capita + Population_growth, data = step_three)
model3 <- lm(Government_Effectiveness ~ Political_Stability + Rule_of_Law + GDP_per_capita + Population_growth, data = step_three)
model4 <- lm(Government_Effectiveness ~ Political_Stability*Rule_of_Law, data = step_three)
library(performance)
compare_performance(model1, model2, model3, model4)
# Modeling
model1 <- lm(Government_Effectiveness ~ Political_Stability + Rule_of_Law + PR + CL +GDP_per_capita + Population_growth, data = megabase)
library(readr)
library(dplyr)
Table_data <- read_csv("~/0_programming/0_prog/project_krasnolobova/Table_data.csv")
Table_data <- Table_data[Table_data$`Measure Names` == 'Governance (-2.5 to +2.5)', ]
Table_data_clean = dplyr::select(Table_data, `Indicator`, `Country`, `Measure Values`)
Table_data_clean$Country[Table_data_clean$Country == 'eSwatini'] <- 'Eswatini'
head(Table_data_clean)
ps = Table_data_clean[1:193, c(2,3)]
gov = Table_data_clean[194:386, c(2,3)]
rl = Table_data_clean[387:579, c(2,3)] # slice the table to smol tables
colnames(ps) <-c('Country', 'Political Stability')
colnames(gov) <-c('Country', 'Government Effectiveness')
colnames(rl) <-c('Country', 'Rule of Law') #rename columns to avoid cringe
library(readxl)
fh <- read_excel("~/0_programming/0_prog/project_krasnolobova/Aggregate_Category_and_Subcategory_Scores_FIW_2003-2022.xlsx",
sheet = "FIW06-22")
head(fh)
fh_clean = dplyr::select(fh, `Country/Territory`, `Region`, `Edition`, `PR`, `CL`)
fh_2020 <- fh_clean[fh_clean$Edition == 2020, ]
pr_cl = fh_2020[,-c(3)]
colnames(pr_cl) <- c('Country','Region', 'Political Rights', 'Civil Liberties')
pr_cl$Country[pr_cl$Country == 'Russia'] <- 'Russian Federation'
pr_cl$Country[pr_cl$Country == 'Slovakia'] <- 'Slovak Republic'
pr_cl$Country[pr_cl$Country == 'Bahamas'] <- 'Bahamas, The'
pr_cl$Country[pr_cl$Country == 'Brunei'] <- 'Brunei Darussalam'
pr_cl$Country[pr_cl$Country == 'Cabo Verde'] <- 'Cape Verde'
pr_cl$Country[pr_cl$Country == 'Congo (Brazzaville)'] <- 'Congo, Dem. Rep.'
pr_cl$Country[pr_cl$Country == 'Congo (Kinshasa)'] <- 'Congo, Rep.'
pr_cl$Country[pr_cl$Country == 'Egypt'] <- 'Egypt, Arab Rep.'
pr_cl$Country[pr_cl$Country == "Cote d'Ivoire"] <- "Côte d'Ivoire"
pr_cl$Country[pr_cl$Country == 'Iran'] <- 'Iran, Islamic Rep.'
pr_cl$Country[pr_cl$Country == 'Kyrgyzstan'] <- 'Kyrgyz Republic'
pr_cl$Country[pr_cl$Country == 'Laos'] <- 'Lao PDR'
pr_cl$Country[pr_cl$Country == 'Micronesia'] <- 'Micronesia, Fed. Sts.'
pr_cl$Country[pr_cl$Country == 'North Korea'] <- 'Korea, Dem. Rep.'
pr_cl$Country[pr_cl$Country == 'Sao Tome and Principe'] <- 'São Tomé and Principe'
pr_cl$Country[pr_cl$Country == 'South Korea'] <- 'Korea, Rep.'
pr_cl$Country[pr_cl$Country == 'Syria'] <- 'Syrian Arab Republic'
pr_cl$Country[pr_cl$Country == 'The Gambia'] <- 'Gambia, The'
pr_cl$Country[pr_cl$Country == 'Turkey'] <- 'Türkiye'
pr_cl$Country[pr_cl$Country == 'Venezuela'] <- 'Venezuela, RB'
pr_cl$Country[pr_cl$Country == 'Yemen'] <- 'Yemen, Rep.'
pr_cl
world_bank <- read_csv("~/0_programming/0_prog/project_krasnolobova/world_bank.csv",
col_types = cols(`Series Name` = col_character(),
`2020 [YR2020]` = col_number()))
wb_clean = world_bank[1:382, -c(2,4)]
colnames(wb_clean) <- c('Country', 'Index', 'Values')
library(tidyr)
wb_cringe <- spread(wb_clean, key = Index, value = Values)
wb <- wb_cringe
colnames(wb_cringe) <- c('Country', 'GDP per capita', 'Population growth')
wb$Country[wb$Country == 'Cabo Verde'] <- 'Cape Verde'
wb$Country[wb$Country == "Cote d'Ivoire"] <- "Côte d'Ivoire"
wb$Country[wb$Country == 'Czechia'] <- 'Czech Republic'
wb$Country[wb$Country == "Korea, Dem. People's Rep."] <- 'Korea, Dem. Rep.'
wb$Country[wb$Country == 'Sao Tome and Principe'] <- 'São Tomé and Principe'
wb$Country[wb$Country == 'Turkiye'] <- 'Türkiye'
wb
b1 <- merge(ps, gov, by='Country')
b2 <- merge(b1, rl, by='Country')
b3 <- merge(b2, pr_cl, by='Country')
mega <- merge(b3, wb, by='Country')
megabase <- na.omit(mega)
megabase
library(ggplot2)
p<-ggplot(megabase, aes(x=Region, y=`Political Rights`, color=Region)) +
xlab("Regions") +
ylab("Political Rights Index") +
ggtitle("Political Rights Index in the World") +
geom_boxplot()
p
# Modeling
model1 <- lm(Government_Effectiveness ~ Political_Stability + Rule_of_Law + PR + CL +GDP_per_capita + Population_growth, data = megabase)
# Modeling
model1 <- lm(`Government Effectiveness` ~ `Political Stability` + `Rule of Law` + `Political Rights` + `Civil Liberties` + `GDP per capita (current US$)` + `Population growth (annual %)`, data = megabase)
model2 <- lm(`Government Effectiveness` ~ `Political Stability` + `Rule of Law` + `Political Rights` + `GDP per capita (current US$)` + `Population growth (annual %)`, data = megabase)
model3 <- lm(`Government Effectiveness` ~ `Political Stability` + `Rule of Law` + `GDP per capita (current US$)` + `Population growth (annual %)`, data = megabase)
model4 <- lm(`Government Effectiveness` ~ `Political Stability`*`Rule of Law`, data = megabase)
library(performance)
compare_performance(model1, model2, model3, model4)
# Model 1
model1 <- lm(`Government Effectiveness` ~ `Political Stability` + `Rule of Law` + `Political Rights` + `Civil Liberties` + `GDP per capita (current US$)` + `Population growth (annual %)`, data = megabase)
summary(model1)
# Model 2
model2 <- lm(`Government Effectiveness` ~ `Political Stability` + `Rule of Law` + `Political Rights` + `GDP per capita (current US$)` + `Population growth (annual %)`, data = megabase)
summary(model2)
# Model 3
model3 <- lm(`Government Effectiveness` ~ `Political Stability` + `Rule of Law` + `GDP per capita (current US$)` + `Population growth (annual %)`, data = megabase)
summary(model3)
# Interaction
model4 <- lm(`Government Effectiveness` ~ `Political Stability`*`Rule of Law`, data = megabase)
summary(model4)
library(performance)
compare_performance(model1, model2, model3, model4)
library(car)
vif(model1)
ncvTest(model2) # p-value > 0.05 -> no problem
outlierTest(model2)
outlierTest(model2) # 108 is outlier
megabase[108,"Country"]
plot(model2, which = 4, cook.levels = 1)
abline(h=1, lty=2, col="red")
summary(powerTransform(megabase$`Government Effectiveness`))
summary(powerTransform(megabase$`Government Effectiveness`**2))
boxTidwell(`Government Effectiveness`**2 ~ `Political Stability`**2 + `Rule of Law`**2 + `Political Rights`**2 + `GDP per capita (current US$)`**2 + `Population growth (annual %)`**2, data = megabase)
library(readr)
democracy_AER <- read_csv("Data/democracy_AER.csv")
democracy_AER <- democracy_AER[c("democracy_AER", "country_name", "year", "id", "dem","lgpd" )]
View(democracy_AER)
democracy_AER <- read_csv("Data/democracy_AER.csv")
democracy_AER <- democracy_AER[c("country_name", "year", "id", "dem","lgpd" )]
library(readr)
democracy_AER <- read_csv("Data/democracy_AER.csv")
democracy_AER <- democracy_AER[c("country_name", "year", "id", "dem","lgdp" )]
View(democracy_AER)
democracy_AER <- democracy_AER[democracy_AER$year >= 1991 & democracy_AER$year <= 2008]
democracy_AER <- democracy_AER[,(democracy_AER$year >= 1991 & democracy_AER$year <= 2008)]
democracy_AER <- democracy_AER[(democracy_AER$year >= 1991 & democracy_AER$year <= 2008),]
View(democracy_AER)
library(readr)
d <- read_csv("Data/democracy_AER.csv")
d <- d[c("country_name", "year", "id", "dem","lgdp" )]
d <- d[(d$year >= 1991 & d$year <= 2008),]
d <- d[(d$country_name == "Estonia" | d$country_name == "Georgia" | d$country_name == "Kyrgyz Republic" | d$country_name == "Latvia"  | d$country_name == "Moldova" | d$country_name == "Tajikistan" | d$country_name == "Turkmenistan"  | d$country_name == "Ukraine" | d$country_name == "Uzbekistan"),]
d
library(plm)
library(readr)
library(car)
library(gplots)
library(tseries)
library(lmtest)
dataPanel <- pdata.frame(d, index=c("id", "year"))
coplot(lgdp ~ year|id, type="b", data=dataPanel)
ols <-lm(lgdp ~ dem, data = dataPanel)
summary(ols)
fixed <- plm(lgdp ~ dem, data=dataPanel, model="within")
summary(fixed)
#Fixed model is better
pFtest(fixed, ols)
random <- plm(lgdp ~ dem, data=dataPanel, model="random")
summary(random)
#Fixed model is better
phtest(fixed, random)
library(stargazer)
stargazer(fixed,
type="html",
model.numbers = FALSE,
title="Table 1. Regression Results",
dep.var.labels=c("LGDP"),
covariate.labels=c("Democracy level"),
omit.stat = c("f","rsq"),
out="cool_model.html")
library(readr)
d <- read_csv("Data/democracy_AER.csv")
d <- d[c("country_name", "year", "id", "dem","lgdp" )]
d <- d[(d$year >= 1991 & d$year <= 2008),]
d <- d[(d$country_name == "Estonia" | d$country_name == "Georgia" | d$country_name == "Kyrgyz Republic" | d$country_name == "Latvia"  | d$country_name == "Moldova" | d$country_name == "Tajikistan" | d$country_name == "Turkmenistan"  | d$country_name == "Ukraine" | d$country_name == "Uzbekistan"),]
d
library(plm)
library(readr)
library(car)
library(gplots)
library(tseries)
library(lmtest)
dataPanel <- pdata.frame(d, index=c("id", "year"))
coplot(lgdp ~ year|id, type="b", data=dataPanel)
o <-lm(lgdp ~ dem, data = dataPanel)
summary(o)
f <- plm(lgdp ~ dem, data=dataPanel, model="within")
summary(f)
#Fixed model is better because p-value is smaller than 0.05
pFtest(f, o)
r <- plm(lgdp ~ dem, data=dataPanel, model="random")
summary(r)
#Fixed model is better because p-value is bigger than 0.05
phtest(f, r)
library(stargazer)
stargazer(f,
type="html",
model.numbers = FALSE,
title="Table 1. Regression Results",
dep.var.labels=c("LGDP"),
covariate.labels=c("Democracy level"),
omit.stat = c("f","rsq"),
out="cool_model.html")
library(ggplot2)
library(cowplot)
a <- ggplot(megabase, aes(`Political Stability`)) +
geom_histogram(aes(y = stat(density))) +
geom_density(col = "red") +
theme_bw() +
xlab("Political Stability") +
ylab("Density") +
ggtitle("Distribution of Political Stability")
library(readr)
library(dplyr)
Table_data <- read_csv("~/0_programming/0_prog/project_krasnolobova/Table_data.csv")
Table_data <- Table_data[Table_data$`Measure Names` == 'Governance (-2.5 to +2.5)', ]
Table_data_clean = dplyr::select(Table_data, `Indicator`, `Country`, `Measure Values`)
Table_data_clean$Country[Table_data_clean$Country == 'eSwatini'] <- 'Eswatini'
head(Table_data_clean)
ps = Table_data_clean[1:193, c(2,3)]
gov = Table_data_clean[194:386, c(2,3)]
rl = Table_data_clean[387:579, c(2,3)] # slice the table to smol tables
colnames(ps) <-c('Country', 'Political Stability')
colnames(gov) <-c('Country', 'Government Effectiveness')
colnames(rl) <-c('Country', 'Rule of Law') #rename columns to avoid cringe
library(readxl)
fh <- read_excel("~/0_programming/0_prog/project_krasnolobova/Aggregate_Category_and_Subcategory_Scores_FIW_2003-2022.xlsx",
sheet = "FIW06-22")
head(fh)
fh_clean = dplyr::select(fh, `Country/Territory`, `Region`, `Edition`, `PR`, `CL`)
fh_2020 <- fh_clean[fh_clean$Edition == 2020, ]
pr_cl = fh_2020[,-c(3)]
colnames(pr_cl) <- c('Country','Region', 'Political Rights', 'Civil Liberties')
pr_cl$Country[pr_cl$Country == 'Russia'] <- 'Russian Federation'
pr_cl$Country[pr_cl$Country == 'Slovakia'] <- 'Slovak Republic'
pr_cl$Country[pr_cl$Country == 'Bahamas'] <- 'Bahamas, The'
pr_cl$Country[pr_cl$Country == 'Brunei'] <- 'Brunei Darussalam'
pr_cl$Country[pr_cl$Country == 'Cabo Verde'] <- 'Cape Verde'
pr_cl$Country[pr_cl$Country == 'Congo (Brazzaville)'] <- 'Congo, Dem. Rep.'
pr_cl$Country[pr_cl$Country == 'Congo (Kinshasa)'] <- 'Congo, Rep.'
pr_cl$Country[pr_cl$Country == 'Egypt'] <- 'Egypt, Arab Rep.'
pr_cl$Country[pr_cl$Country == "Cote d'Ivoire"] <- "Côte d'Ivoire"
pr_cl$Country[pr_cl$Country == 'Iran'] <- 'Iran, Islamic Rep.'
pr_cl$Country[pr_cl$Country == 'Kyrgyzstan'] <- 'Kyrgyz Republic'
pr_cl$Country[pr_cl$Country == 'Laos'] <- 'Lao PDR'
pr_cl$Country[pr_cl$Country == 'Micronesia'] <- 'Micronesia, Fed. Sts.'
pr_cl$Country[pr_cl$Country == 'North Korea'] <- 'Korea, Dem. Rep.'
pr_cl$Country[pr_cl$Country == 'Sao Tome and Principe'] <- 'São Tomé and Principe'
pr_cl$Country[pr_cl$Country == 'South Korea'] <- 'Korea, Rep.'
pr_cl$Country[pr_cl$Country == 'Syria'] <- 'Syrian Arab Republic'
pr_cl$Country[pr_cl$Country == 'The Gambia'] <- 'Gambia, The'
pr_cl$Country[pr_cl$Country == 'Turkey'] <- 'Türkiye'
pr_cl$Country[pr_cl$Country == 'Venezuela'] <- 'Venezuela, RB'
pr_cl$Country[pr_cl$Country == 'Yemen'] <- 'Yemen, Rep.'
pr_cl
world_bank <- read_csv("~/0_programming/0_prog/project_krasnolobova/world_bank.csv",
col_types = cols(`Series Name` = col_character(),
`2020 [YR2020]` = col_number()))
wb_clean = world_bank[1:382, -c(2,4)]
colnames(wb_clean) <- c('Country', 'Index', 'Values')
library(tidyr)
wb_cringe <- spread(wb_clean, key = Index, value = Values)
wb <- wb_cringe
colnames(wb_cringe) <- c('Country', 'GDP per capita', 'Population growth')
wb$Country[wb$Country == 'Cabo Verde'] <- 'Cape Verde'
wb$Country[wb$Country == "Cote d'Ivoire"] <- "Côte d'Ivoire"
wb$Country[wb$Country == 'Czechia'] <- 'Czech Republic'
wb$Country[wb$Country == "Korea, Dem. People's Rep."] <- 'Korea, Dem. Rep.'
wb$Country[wb$Country == 'Sao Tome and Principe'] <- 'São Tomé and Principe'
wb$Country[wb$Country == 'Turkiye'] <- 'Türkiye'
wb
b1 <- merge(ps, gov, by='Country')
b2 <- merge(b1, rl, by='Country')
b3 <- merge(b2, pr_cl, by='Country')
mega <- merge(b3, wb, by='Country')
megabase <- na.omit(mega)
megabase
library(ggplot2)
library(cowplot)
a <- ggplot(megabase, aes(`Political Stability`)) +
geom_histogram(aes(y = stat(density))) +
geom_density(col = "red") +
theme_bw() +
xlab("Political Stability") +
ylab("Density") +
ggtitle("Distribution of Political Stability")
b <- ggplot(megabase, aes(`Rule of Law`)) +
geom_histogram(aes(y = stat(density))) +
geom_density(col = "red") +
theme_bw() +
xlab("Rule of Law") +
ylab("Density") +
ggtitle("Distribution of Rule of Law")
plot_grid(
a, b,
align="hv"
)
##### Можно ли по частям света которые во фридом Хаусе или обязательно те которые из списка???
library(ggplot2)
p<-ggplot(megabase, aes(x=Region, y=`Political Rights`, color=Region)) +
xlab("Regions") +
ylab("Political Rights Index") +
ggtitle("Political Rights Index in the World") +
geom_boxplot()
p
# Model 1
model1 <- lm(`Government Effectiveness` ~ `Political Stability` + `Rule of Law` + `Political Rights` + `Civil Liberties` + `GDP per capita (current US$)` + `Population growth (annual %)`, data = megabase)
summary(model1)
# Model 2
model2 <- lm(`Government Effectiveness` ~ `Political Stability` + `Rule of Law` + `Political Rights` + `GDP per capita (current US$)` + `Population growth (annual %)`, data = megabase)
summary(model2)
# Model 3
model3 <- lm(`Government Effectiveness` ~ `Political Stability` + `Rule of Law` + `GDP per capita (current US$)` + `Population growth (annual %)`, data = megabase)
summary(model3)
# Interaction
model4 <- lm(`Government Effectiveness` ~ `Political Stability`*`Rule of Law`, data = megabase)
summary(model4)
library(performance)
compare_performance(model1, model2, model3, model4)
library(car)
vif(model1) # >10 we have problems, lets kick Civil Liberties
### Правильно ли я понимаю, что если у кого то больше 10 то мы просто убираем эту IV из модели? По сути пользуемся другой моделью
ncvTest(model2) # cool no problems big p
outlierTest(model2) # 108 is outlier Mexico
megabase[108,"Country"]
plot(model2, which = 4, cook.levels = 1)
abline(h=1, lty=2, col="red")
summary(powerTransform(megabase$`Government Effectiveness`**2))
##### Требуют только положительные значения, нормально ли возводить в квадрат переменную?
### Что здесь происходит????? Он постоянно ругается либо на то чтобы были положительные, либо на то чтобы Na Inf в значениях. Как правильно здесь нашаманить данные, чтобы оно все заработало?
boxTidwell(`Government Effectiveness`**2 ~ `Political Stability`**2 + `Rule of Law`**2 + `Political Rights`**2 + `GDP per capita (current US$)`**2 + `Population growth (annual %)`**2, data = megabase)
ncvTest(model2) # cool no problems big p
spreadLevelPlot(model2)
summary(powerTransform(megabase$`Government Effectiveness`**2))
##### Требуют только положительные значения, нормально ли возводить в квадрат переменную?
qqPlot(model2, main="Plot")
crPlots(model2)
crPlots(lm(megabase$`Government Effectiveness` ~ megabase$`Political Stability` + megabase$`Rule of Law` + megabase$`Political Rights` + megabase$`GDP per capita (current US$)` + megabase$`Population growth (annual %)`))
